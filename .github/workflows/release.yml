name: Cross-Compile and Release

on:
  push:
    tags:
      - 'v*' # タグが vX.X.X の形式でプッシュされたときに実行

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # リポジトリをクローン
      - name: Checkout code
        uses: actions/checkout@v3

      # Rustツールチェインのセットアップ
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      # cross のインストール
      - name: Install cross
        run: cargo install cross --locked

      # キャッシュの設定
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"

      # 静的リンクされた aarch64 バイナリのビルド
      - name: Build for aarch64 (static binary)
        run: cross build --release --target aarch64-unknown-linux-musl
        env:
          CARGO_TERM_COLOR: always

      # 静的リンクされた x86_64 バイナリのビルド
      - name: Build for x86_64 (static binary)
        run: cross build --release --target x86_64-unknown-linux-musl
        env:
          CARGO_TERM_COLOR: always

      # アーティファクトを準備
      - name: Prepare release artifacts
        run: |
          mkdir -p artifacts
          cp target/aarch64-unknown-linux-musl/release/* artifacts/lambda_simple_binary_execute-aarch64
          cp target/x86_64-unknown-linux-musl/release/* artifacts/lambda_simple_binary_execute-x86_64

      - name: Release artifacts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/lambda_simple_binary_execute-aarch64/lambda_simple_binary_execute
            artifacts/lambda_simple_binary_execute-x86_64/lambda_simple_binary_execute
